{
  "_args": [
    [
      {
        "raw": "powerbi-models@^1.0.1",
        "scope": null,
        "escapedName": "powerbi-models",
        "name": "powerbi-models",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "c:\\PowerBI\\Mirror\\github\\PowerBI-javascript\\demo\\node_modules\\powerbi-client"
    ]
  ],
  "_from": "powerbi-models@>=1.0.1 <2.0.0",
  "_id": "powerbi-models@1.0.1",
  "_inCache": true,
  "_location": "/powerbi-models",
  "_nodeVersion": "6.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/powerbi-models-1.0.1.tgz_1511076742888_0.10710063064470887"
  },
  "_npmUser": {
    "name": "powerbi",
    "email": "nugetpowerbi@microsoft.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "powerbi-models@^1.0.1",
    "scope": null,
    "escapedName": "powerbi-models",
    "name": "powerbi-models",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/powerbi-client"
  ],
  "_resolved": "https://registry.npmjs.org/powerbi-models/-/powerbi-models-1.0.1.tgz",
  "_shasum": "cc959e077fe7c6376e8d47049dbe9ea8a0ee6c47",
  "_shrinkwrap": null,
  "_spec": "powerbi-models@^1.0.1",
  "_where": "c:\\PowerBI\\Mirror\\github\\PowerBI-javascript\\demo\\node_modules\\powerbi-client",
  "author": {
    "name": "Microsoft PowerBI Team"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/powerbi-models/issues"
  },
  "dependencies": {},
  "description": "Contains JavaScript &amp; TypeScript object models for Microsoft Power BI JavaScript SDK. For each model there is a TypeScript interface, and a validation function to ensure and object is valid.",
  "devDependencies": {
    "del": "^2.2.1",
    "gulp": "^3.9.1",
    "gulp-flatten": "^0.2.0",
    "gulp-gh-pages": "^0.5.4",
    "gulp-header": "^1.8.7",
    "gulp-help": "^1.6.1",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-tslint": "^6.0.2",
    "gulp-typedoc": "^2.0.0",
    "gulp-uglify": "^1.5.4",
    "jasmine-core": "^2.4.1",
    "json-loader": "^0.5.4",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-spec-reporter": "0.0.26",
    "moment": "^2.14.1",
    "phantomjs-prebuilt": "^2.1.7",
    "run-sequence": "^1.2.1",
    "ts-loader": "^0.8.2",
    "tslint": "^3.14.0",
    "typedoc": "^0.4.4",
    "typescript": "^2.2.1",
    "typings": "^1.3.2",
    "webpack": "^1.13.2",
    "webpack-stream": "^3.2.0",
    "yargs": "^4.7.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-tziSFc0eonR9WO8rBbC8ViZxxpo8z2RrvXOQgXQ6uk4HaydtkR1f/oEVYHTCtkEPe9XreX3EHa3iZq3IsWkvMQ==",
    "shasum": "cc959e077fe7c6376e8d47049dbe9ea8a0ee6c47",
    "tarball": "https://registry.npmjs.org/powerbi-models/-/powerbi-models-1.0.1.tgz"
  },
  "files": [
    "dist"
  ],
  "gitHead": "0dc0647455fab0801f557fccb2129e74d3fb0485",
  "homepage": "https://github.com/Microsoft/powerbi-models#readme",
  "keywords": [
    "Microsoft",
    "PowerBI",
    "message",
    "validation",
    "json"
  ],
  "license": "MIT",
  "main": "dist/models.js",
  "maintainers": [
    {
      "name": "powerbi",
      "email": "nugetpowerbi@microsoft.com"
    }
  ],
  "name": "powerbi-models",
  "optionalDependencies": {},
  "publishConfig": {},
  "readme": "# powerbi-models\r\n[![Build Status](https://img.shields.io/travis/Microsoft/powerbi-models.svg)](https://travis-ci.org/Microsoft/powerbi-models)\r\n[![NPM Version](https://img.shields.io/npm/v/powerbi-models.svg)](https://www.npmjs.com/package/powerbi-models)\r\n[![NPM Total Downloads](https://img.shields.io/npm/dt/powerbi-models.svg)](https://www.npmjs.com/package/powerbi-models)\r\n[![NPM Monthly Downloads](https://img.shields.io/npm/dm/powerbi-models.svg)](https://www.npmjs.com/package/powerbi-models)\r\n[![GitHub tag](https://img.shields.io/github/tag/microsoft/powerbi-models.svg)](https://github.com/Microsoft/powerbi-models/tags)\r\n\r\nContains JavaScript &amp; TypeScript object models for Microsoft Power BI JavaScript SDK.\r\n\r\nFor each model there is a TypeScript interface, a json schema definitions, and a validation function to ensure a given object is a valid model.\r\n\r\n## Documentation\r\n### [https://microsoft.github.io/powerbi-models](https://microsoft.github.io/powerbi-models)\r\n\r\n## Getting Started\r\n\r\nInstall\r\n\r\n```bash\r\nnpm install --save powerbi-models\r\n```\r\n\r\nImport\r\n\r\n```typescript\r\nimport * as models from 'powerbi-models';\r\n```\r\n\r\nUsage\r\n\r\nValidation:\r\n\r\n```typescript\r\nlet testObject = { x: 1 };\r\n\r\nconst errors = models.validateLoad(testObject);\r\n\r\nif(errors) {\r\n  console.warn(errors);\r\n}\r\n\r\n```\r\nWould output to the console:\r\n\r\n```typescript\r\n[\r\n  {\r\n    message: 'accessToken is required'\r\n  }\r\n]\r\n```\r\n\r\nCreating filters:\r\n```typescript\r\nconst basicFilter: models.IBasicFilter = {\r\n  target: {\r\n    table: \"Products\",\r\n    column: \"Version\"\r\n  },\r\n  operator: \"In\",\r\n  values: [\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n  ]\r\n};\r\n\r\nconst advancedFilter: models.IAdvancedFilter = {\r\n  target: {\r\n    table: \"Products\",\r\n    column: \"Name\"\r\n  },\r\n  logicalOperator: \"Or\",\r\n  conditions: [\r\n    {\r\n      operator: \"Contains\",\r\n      value: \"Power\"\r\n    },\r\n    {\r\n      operator: \"Contains\",\r\n      value: \"Microsoft\"\r\n    }\r\n  ]\r\n};\r\n```\r\n\r\nOr use the constructor methods:\r\n```typescript\r\nconst advancedFilter = new models.AdvancedFilter(\r\n  {\r\n    table: \"Products\",\r\n    column: \"Name\"\r\n  },\r\n  \"Or\",\r\n  {\r\n    operator: \"Contains\",\r\n    value: \"Power\"\r\n  },\r\n  {\r\n    operator: \"Contains\",\r\n    value: \"Microsoft\"\r\n  }\r\n);\r\n```\r\n\r\n## Date Formatting\r\nDates should be formated using [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. Example: `2016-09-08T00:15:46.861Z`\r\n\r\nThis is how dates are naturally serialized to JSON:\r\n```\r\nnew Date().toJSON(); //=> 2016-09-08T00:15:46.861Z\r\n```\r\n\r\nAn example filter using this Date format would look like the following:\r\n\r\n```\r\n{\r\n  \"$schema\": \"http://powerbi.com/product/schema#advanced\",\r\n  \"target\": {\r\n    \"table\": \"Time\",\r\n    \"column\": \"Date\"\r\n  },\r\n  \"logicalOperator\": \"And\",\r\n  \"conditions\": [\r\n    {\r\n      \"operator\": \"GreaterThan\",\r\n      \"value\": \"2014-06-01T07:00:00.000Z\"\r\n    }\r\n  ]\r\n}\r\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/powerbi-models.git"
  },
  "scripts": {
    "build": "gulp build",
    "gulp": "gulp",
    "prepublish": "typings install && gulp build",
    "test": "gulp test",
    "typings": "typings"
  },
  "typings": "dist/models.d.ts",
  "version": "1.0.1"
}
