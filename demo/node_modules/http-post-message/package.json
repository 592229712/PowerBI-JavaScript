{
  "_args": [
    [
      {
        "raw": "http-post-message@^0.2",
        "scope": null,
        "escapedName": "http-post-message",
        "name": "http-post-message",
        "rawSpec": "^0.2",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "c:\\PowerBI\\Mirror\\github\\PowerBI-javascript\\demo\\node_modules\\powerbi-client"
    ]
  ],
  "_from": "http-post-message@>=0.2.0 <0.3.0",
  "_id": "http-post-message@0.2.3",
  "_inCache": true,
  "_location": "/http-post-message",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/http-post-message-0.2.3.tgz_1472329063241_0.4381651943549514"
  },
  "_npmUser": {
    "name": "powerbi",
    "email": "nugetpowerbi@microsoft.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-post-message@^0.2",
    "scope": null,
    "escapedName": "http-post-message",
    "name": "http-post-message",
    "rawSpec": "^0.2",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/powerbi-client"
  ],
  "_resolved": "https://registry.npmjs.org/http-post-message/-/http-post-message-0.2.3.tgz",
  "_shasum": "32c560ac615f310a7e459ffc71277b579b242e1e",
  "_shrinkwrap": null,
  "_spec": "http-post-message@^0.2",
  "_where": "c:\\PowerBI\\Mirror\\github\\PowerBI-javascript\\demo\\node_modules\\powerbi-client",
  "author": {
    "name": "Microsoft Power BI"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/http-post-message/issues"
  },
  "dependencies": {
    "es6-promise": "^3.2.1"
  },
  "description": "A generic messaging component to send HTTP style message payloads over the window.postMessage API. Requires an implementation of window postMessage proxy such as 'window-post-message-proxy'.",
  "devDependencies": {
    "del": "^2.2.1",
    "gulp": "^3.9.1",
    "gulp-gh-pages": "^0.5.4",
    "gulp-header": "^1.8.7",
    "gulp-help": "^1.6.1",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-tslint": "^6.1.1",
    "gulp-typedoc": "^2.0.0",
    "gulp-uglify": "^1.5.3",
    "jasmine": "^2.4.1",
    "jasmine-core": "^2.4.1",
    "jquery": "^2.2.3",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-spec-reporter": "0.0.26",
    "moment": "^2.14.1",
    "phantomjs-prebuilt": "^2.1.7",
    "run-sequence": "^1.1.5",
    "ts-loader": "^0.8.2",
    "tslint": "^3.15.0",
    "typedoc": "^0.4.4",
    "typescript": "^1.8.10",
    "typings": "^1.3.2",
    "webpack-stream": "^3.2.0",
    "yargs": "^4.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "32c560ac615f310a7e459ffc71277b579b242e1e",
    "tarball": "https://registry.npmjs.org/http-post-message/-/http-post-message-0.2.3.tgz"
  },
  "files": [
    "dist"
  ],
  "gitHead": "a8cd9dec9f9804a5ad94f120c0057bd99f709960",
  "homepage": "https://github.com/Microsoft/http-post-message#readme",
  "keywords": [
    "Microsoft",
    "post",
    "message",
    "http",
    "iframe",
    "protocol"
  ],
  "license": "MIT",
  "main": "dist/httpPostMessage.js",
  "maintainers": [
    {
      "name": "powerbi",
      "email": "nugetpowerbi@microsoft.com"
    }
  ],
  "name": "http-post-message",
  "optionalDependencies": {},
  "publishConfig": {
    "tag": "beta"
  },
  "readme": "# htt-post-message\n[![Travis branch](https://img.shields.io/travis/Microsoft/http-post-message.svg)](https://travis-ci.org/Microsoft/http-post-message)\n[![npm](https://img.shields.io/npm/v/http-post-message.svg)](https://www.npmjs.com/package/http-post-message)\n[![Total Downloads](https://img.shields.io/npm/dt/http-post-message.svg)](https://www.npmjs.com/package/http-post-message)\n[![Monthly Downloads](https://img.shields.io/npm/dm/http-post-message.svg)](https://www.npmjs.com/package/http-post-message)\n[![GitHub tag](https://img.shields.io/github/tag/microsoft/http-post-message.svg)](https://github.com/Microsoft/http-post-message)\n\nA generic messaging component to send HTTP style message payloads over the window.postMessage API. Requires an implementation of window postMessage proxy such as 'window-post-message-proxy'.\n\n## Documentation:\n### [https://microsoft.github.io/http-post-message](https://microsoft.github.io/http-post-message)\n\n## Installation\n\n```bash\nnpm install --save http-post-message\n```\n\n## Usage\nThe HttpPostMessage takes in an object that implements the IPostMessage interface which\nis just one method `postMessage` which returns a Promise.\n\nIn the case below we created a mock postMessage proxy, but in normal usage you would likely use the accompanying library [window-post-message-proxy](https://pbix.visualstudio.com/DefaultCollection/PaaS/_git/window-post-message-proxy) and configure it to handle http messages as shown in the section [below](#promiseresolution)\n\n```typescript\nimport * as hpm from 'http-post-message';\n\nconst stubWindowPostMessageProxy: hpm.IPostMessage = {\n  postMessage(message: any) {\n    console.log(message);\n    return Promise.resolve(message):\n  }\n}\n\nconst httpPostMessage = new hpm.HttpPostMessage(stubWindowPostMessageProxy);\n\nhttpPostMessage.get('target/path')\n  .then(response => {\n    ...\n  });\n```\n\n### Methods\nThe object supports all the standard http methods, `get`, `post`, `put`, `patch`, and `delete`.\nYou can also send an `IRequest` object directly to the lower-level `send` method.\n\n### <a name=\"promiseresolution\"></a> Determining promise resolution state\nThe promise returned by the request will be fulfulled or rejected depending on how the instance of WindowPostMessageProxy provided to the constructor was configured.\n\nSince we intend to use HTTP semantics, this library comes with static methods that can be provided to the WPMP class during construction as seen below:\n\n```javascript\nimport * as wpmp from 'window-post-message-proxy';\nimport * as hpm from 'http-post-message';\n\nconst windowPostMessageProxy = new wpmp.WindowPostMessageProxy({\n  processTrackingProperties: {\n      addTrackingProperties: hpm.HttpPostMessage.addTrackingProperties,\n      getTrackingProperties: hpm.HttpPostMessage.getTrackingProperties,\n  },\n  isErrorMessage: hpm.HttpPostMessage.isErrorMessage\n});\n\nconst httpPostMessage = new hpm.HttpPostMessage(windowPostMessageProxy);\n```\n\n### Default Headers and Default Window\nYou may specify default headers and default target window to be sent with every request by supplying them during construction.\n\nProviding the default target window in the constructor means you do not have to specify it in each individual request, but it can be over written to allow a single instance of HPM to communicate with multiple windows.\n\n```javascript\nimport * as hpm from 'http-post-message';\n\n...\n\nconst httpPostMessage = new hpm.HttpPostMessage(wpmp, {\n    'x-sdk-type': sdkType,\n    'x-sdk-version': sdkVersion\n  }, defaultTargetWindow);\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/http-post-message.git"
  },
  "scripts": {
    "build": "gulp build",
    "gulp": "gulp",
    "prepublish": "typings install && gulp build",
    "test": "gulp test",
    "typings": "typings"
  },
  "typings": "dist/httpPostMessage.d.ts",
  "version": "0.2.3"
}
